<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/05/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>elementUI 图标乱码踩坑</title>
    <url>/2021/05/09/elementUI-%E5%9B%BE%E6%A0%87%E4%B9%B1%E7%A0%81%E8%B8%A9%E5%9D%91/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>asyncAwait实现</title>
    <url>/2021/07/06/asyncAwait%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> getData = <span class="function">() =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> resolve(<span class="string">&#x27;data&#x27;</span>), <span class="number">1000</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asyncToGenerator</span> (<span class="params">genF</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">const</span> gen = genF</span><br><span class="line">      <span class="keyword">const</span> step = <span class="function"><span class="params">nextF</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> &#123; value, done &#125; = nextF()</span><br><span class="line">        <span class="keyword">if</span> (done) resolve(value)</span><br><span class="line">        <span class="built_in">Promise</span>.resolve(value).then(<span class="function"><span class="params">res</span> =&gt;</span> step(<span class="function">() =&gt;</span> gen.next(res)),</span><br><span class="line">          <span class="function"><span class="params">err</span> =&gt;</span> step(<span class="function">() =&gt;</span> gen.throw(err))</span><br><span class="line">        )</span><br><span class="line">      &#125;</span><br><span class="line">      step(<span class="function">() =&gt;</span> gen.next())</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = asyncToGenerator(<span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">yield</span>, <span class="string">&#x27;start&#x27;</span>)</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;data:&#x27;</span>, <span class="keyword">yield</span> getData())</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;data2:&#x27;</span>, <span class="keyword">yield</span> getData())</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;end&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">test().then(<span class="function"><span class="params">res</span> =&gt;</span> <span class="built_in">console</span>.log(res))</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>symbol实现</title>
    <url>/2021/06/03/symbol%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> generateName = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> id = <span class="number">0</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">desc</span>) </span>&#123;</span><br><span class="line">    id++</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;@@&#x27;</span> + desc + id</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">symbol</span> (<span class="params">description</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">this</span> <span class="keyword">instanceof</span> symbol) &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;Symbol can not be new &#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">let</span> desc = description == <span class="literal">undefined</span> ? <span class="literal">undefined</span> : <span class="built_in">String</span>(description)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> sbl = <span class="built_in">Object</span>.create(&#123;</span><br><span class="line">    <span class="attr">toString</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>._name_</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">valueOf</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="built_in">Object</span>.defineProperties(sbl, &#123;</span><br><span class="line">    <span class="string">&#x27;_Description_&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: desc,</span><br><span class="line">      <span class="attr">configurable</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">enumerable</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">writable</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;_name_&#x27;</span>: &#123;</span><br><span class="line">      <span class="attr">value</span>: generateName(desc),</span><br><span class="line">      <span class="attr">configurable</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">writable</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">enumerable</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> sbl</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> woonsan = symbol(<span class="string">&#x27;woonsan&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> woon = symbol(<span class="string">&#x27;woon&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(woonsan.valueOf())</span><br><span class="line"><span class="built_in">console</span>.log(woon.toString())</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>节流防抖实现</title>
    <url>/2021/08/09/throttleAndDebounce%E8%8A%82%E6%B5%81%E9%98%B2%E6%8A%96/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>fn 需要节流的函数、方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Number&#125;</span> </span>wait 需要节流的时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>immediate 是否立即执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;...any&#125;</span> </span>args 节流函数参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> throttle = <span class="function">(<span class="params">fn, wait, immediate, ...args</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">    <span class="keyword">let</span> pre = <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">const</span> now = +<span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">      <span class="keyword">if</span> (now - pre &gt; wait) &#123;</span><br><span class="line">        fn.apply(<span class="built_in">this</span>, args)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> timeout = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">const</span> ctx = <span class="built_in">this</span></span><br><span class="line">      <span class="keyword">if</span> (!timeout) &#123;</span><br><span class="line">        timeout = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          timeout = <span class="literal">null</span></span><br><span class="line">          fn.apply(ctx, args)</span><br><span class="line">        &#125;, wait)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>fn 需要防抖的函数、方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Number&#125;</span> </span>wait 需要防抖的时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>immediate 是否立即执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;...any&#125;</span> </span>args 防抖函数参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> debounce = <span class="function">(<span class="params">fn, wait, immediate, ...args</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> timeout = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> ctx = <span class="built_in">this</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;timeout1:&#x27;</span> + timeout)</span><br><span class="line">    <span class="keyword">if</span> (timeout) <span class="built_in">clearTimeout</span>(timeout)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;timeout2:&#x27;</span> + timeout)</span><br><span class="line">    <span class="keyword">if</span> (immediate) &#123;</span><br><span class="line">      <span class="keyword">const</span> callNow = !timeout</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&#x27;1&#x27;</span> + callNow)</span><br><span class="line">      timeout = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;setTimeout1&#x27;</span> + timeout)</span><br><span class="line">        timeout = <span class="literal">null</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;setTimeout2&#x27;</span> + timeout)</span><br><span class="line">      &#125;, wait)</span><br><span class="line">      <span class="keyword">if</span> (callNow) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;callNow&#x27;</span> + callNow)</span><br><span class="line">        fn.apply(ctx, args)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      timeout = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        timeout = <span class="literal">null</span></span><br><span class="line">        fn.apply(ctx, args)</span><br><span class="line">      &#125;, wait)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fn = <span class="function"><span class="params">n</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(n)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> run = debounce(fn, <span class="number">3000</span>, <span class="number">1</span>, <span class="number">123</span>)</span><br><span class="line">run()</span><br><span class="line">run()</span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  run()</span><br><span class="line">&#125;, <span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>科室分享会</title>
    <url>/2021/07/16/%E5%88%86%E4%BA%AB%E4%BC%9A%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h1><h2 id="什么是设计模式"><a href="#什么是设计模式" class="headerlink" title="什么是设计模式"></a>什么是设计模式</h2><p>设计模式就是前人们总结出来的优秀的编程实践，应对不同场景为复杂的代码实现提供便捷的解决方案</p>
<h2 id="常见的设计模式"><a href="#常见的设计模式" class="headerlink" title="常见的设计模式"></a>常见的设计模式</h2><ul>
<li>创建型模式：处以创建对象为目标的设计模式<ul>
<li>单例</li>
<li>工厂方法</li>
<li>抽象工厂</li>
<li>建造者</li>
</ul>
</li>
<li>结构型模式：关注对象之间的组合结构的设计模式<ul>
<li>装饰者</li>
<li>组合</li>
<li>外观</li>
<li>享元</li>
<li>代理</li>
</ul>
</li>
<li>行为型模式：提高系统内相互独立的对象之间的交流通讯<ul>
<li>命令</li>
<li>发布订阅</li>
<li>观察者</li>
<li>备忘录</li>
</ul>
</li>
</ul>
<h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><p>简单来说，单例模式中类的实例的个数只有一个，当需要一个对象去贯穿整个系统执行某些任务时，单例模式就很合适了。<br><br>实现单例模式需要解决这几个问题</p>
<ol>
<li>怎么确定类只有一个实例（限制实例个数为 1）？</li>
<li>怎么简便的访问类的唯一实例？</li>
</ol>
<p>实现：</p>
<ul>
<li>将类的构造函数隐藏不直接暴露， 避免被多次实例化</li>
<li>通过暴露一个方法 <code> getInstance() </code> 来创建/获取唯一实例</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//单例构造器</span></span><br><span class="line"><span class="keyword">const</span> singleton =(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//隐藏的类的构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">instanceConstructor</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//未初始化的单例对象</span></span><br><span class="line">    <span class="keyword">let</span> instance</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="comment">//通过条件判断创建/获取单例对象</span></span><br><span class="line">        <span class="attr">getInstance</span>: <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!instance)&#123;</span><br><span class="line">                instance = <span class="keyword">new</span> instanceConstructor(name)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> instance</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> test = singleton.getInstance(<span class="string">&#x27;woonsan&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> test1 = singleton.getInstance(<span class="string">&#x27;woon&#x27;</span>)</span><br><span class="line"><span class="built_in">console</span>.log(test) <span class="comment">// instanceConstructor &#123; name: &#x27;woonsan&#x27; &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(test.name) <span class="comment">// woonsan</span></span><br><span class="line"><span class="built_in">console</span>.log(test1)<span class="comment">// instanceConstructor &#123; name: &#x27;woonsan&#x27; &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(test1.name) <span class="comment">// woonsan</span></span><br><span class="line"><span class="built_in">console</span>.log(test === test1) <span class="comment">// true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>作为命名空间使用(在 es6 块级作用域出来之前常用现在比较少见 例如 jQuery 等)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> woonsan = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">instanceConstructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    instanceConstructor.prototype.calculate =<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b</span><br><span class="line">    &#125;</span><br><span class="line">    instanceConstructor.prototype.say =<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`my name is <span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>`</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> instance</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">getInstance</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!instance)&#123;</span><br><span class="line">                instance = <span class="keyword">new</span> instanceConstructor()</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> instance</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"><span class="keyword">const</span> woon = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">instanceConstructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name = <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">        <span class="built_in">this</span>.age = <span class="string">&#x27;23&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    instanceConstructor.prototype.calculate =<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a * b</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> instance</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">getInstance</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!instance)&#123;</span><br><span class="line">                instance = <span class="keyword">new</span> instanceConstructor()</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> instance</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(woonsan.getInstance()) <span class="comment">// instanceConstructor &#123; name: &#x27;woonsan&#x27; &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(woonsan.getInstance().caculate(<span class="number">2</span>,<span class="number">5</span>)) <span class="comment">// 7</span></span><br><span class="line"><span class="built_in">console</span>.log(woon.getInstance()) <span class="comment">// instanceConstructor &#123; name: &#x27;woon&#x27;, age: &#x27;23&#x27; &#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(woon.getInstance().caculate(<span class="number">2</span>,<span class="number">5</span>)) <span class="comment">// 10</span></span><br></pre></td></tr></table></figure>

<h3 id="享元模式"><a href="#享元模式" class="headerlink" title="享元模式"></a>享元模式</h3><p>定义：运用共享技术来减少创建对象的数量，避免大量拥有相同内容的小类的开销，从而减少内存占用、提高性能。</p>
<ul>
<li>内部状态：可以被对象集合共享，通常不会改变的属性、方法</li>
<li>外部状态：根据应用场景经常改变的属性、方法 <br></li>
</ul>
<p>下面是一个例子，一个图书馆借书记录，在不使用享元模式优化时，每记录一条借书记录，都需要创建一个<code>Book</code>对象，假设同一本书被借了 5 次，<code>Book</code>对象会被实例化 5 次，其中书名、作者、出版 id、isbn 码等属性都会被创建 5 次，而其实这几个属性的值都是一样的，因为只是同一本书在不同时间点被借出了 5 次，重复创建相同的信息对系统造成不少的内存占用，样本小的时候也许看不出什么问题，当样本成千上万时就是比较明显了。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不使用享元模式</span></span><br><span class="line"><span class="keyword">let</span> Book = <span class="function"><span class="keyword">function</span> (<span class="params">id, title, author, publisherID, ISBN, outDate, checkoutMember, returnDate, status</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.id = id <span class="comment">//id</span></span><br><span class="line">  <span class="built_in">this</span>.title = title <span class="comment">//书名</span></span><br><span class="line">  <span class="built_in">this</span>.author = author <span class="comment">//作者</span></span><br><span class="line">  <span class="built_in">this</span>.publisherID = publisherID <span class="comment">//出版id</span></span><br><span class="line">  <span class="built_in">this</span>.ISBN = ISBN <span class="comment">//isbn码</span></span><br><span class="line">  <span class="built_in">this</span>.outDate = outDate <span class="comment">//借出日期</span></span><br><span class="line">  <span class="built_in">this</span>.checkoutMember = checkoutMember <span class="comment">//借书人</span></span><br><span class="line">  <span class="built_in">this</span>.returnDate = returnDate || <span class="string">&#x27;暂无&#x27;</span> <span class="comment">//归还日期</span></span><br><span class="line">  <span class="built_in">this</span>.status = status || <span class="string">&#x27;可借&#x27;</span> <span class="comment">//书的可借与否状态</span></span><br><span class="line">&#125;</span><br><span class="line">Book.prototype = &#123;</span><br><span class="line">  <span class="attr">getTitle</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.title</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getAuthor</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.author</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getISBN</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.ISBN</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/*其它的get方法*/</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 更新借出状态</span></span><br><span class="line">  <span class="attr">updateCheckoutStatus</span>: <span class="function"><span class="keyword">function</span> (<span class="params">bookID, newStatus, outDate, checkoutMember, newReturnDate</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.id = bookID</span><br><span class="line">    <span class="built_in">this</span>.status = newStatus</span><br><span class="line">    <span class="built_in">this</span>.outDate = outDate</span><br><span class="line">    <span class="built_in">this</span>.checkoutMember = checkoutMember</span><br><span class="line">    <span class="built_in">this</span>.returnDate = newReturnDate</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//续借</span></span><br><span class="line">  <span class="attr">extendCheckoutPeriod</span>: <span class="function"><span class="keyword">function</span> (<span class="params">newReturnDate</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.returnDate = newReturnDate</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//是否到期</span></span><br><span class="line">  <span class="attr">isOverdue</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> currentDate = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.outDate</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> records = []</span><br><span class="line">records.push(<span class="keyword">new</span> Book(<span class="number">3</span>, <span class="string">&#x27;javascript&#x27;</span>, <span class="string">&#x27;ryf&#x27;</span>, <span class="string">&#x27;123452&#x27;</span>, <span class="string">&#x27;123452&#x27;</span>, <span class="string">&#x27;2019-06-22&#x27;</span>,  <span class="string">&#x27;woonsan&#x27;</span>))</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用享元模式进行优化</span></span><br><span class="line"><span class="comment">/* 提取公共属性、方法（内部状态）对于一本书来说即使被借了多次这些属性也是不会变化的 */</span></span><br><span class="line"><span class="keyword">let</span> Book = <span class="function"><span class="keyword">function</span> (<span class="params">title, author, publisherID, ISBN</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.title = title <span class="comment">//书名</span></span><br><span class="line">  <span class="built_in">this</span>.author = author <span class="comment">//作者</span></span><br><span class="line">  <span class="built_in">this</span>.publisherID = publisherID <span class="comment">//出版id</span></span><br><span class="line">  <span class="built_in">this</span>.ISBN = ISBN <span class="comment">//isbn码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Book工厂 统一管理书籍信息（管理内部状态） */</span></span><br><span class="line"><span class="keyword">let</span> BookFactory = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//用一个对象来存储记录已创建的Book实例以便复用,假设同一本书被借了五次，也只是创建了一次 Book 类的实例</span></span><br><span class="line">  <span class="keyword">let</span> existingBooks = &#123;&#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">createBook</span>: <span class="function"><span class="keyword">function</span> (<span class="params">title, author, publisherID, ISBN</span>) </span>&#123;</span><br><span class="line">      <span class="comment">/* 查找之前是否已创建 */</span></span><br><span class="line">      <span class="keyword">let</span> existingBook = existingBooks[ISBN]</span><br><span class="line">      <span class="keyword">if</span> (existingBook) &#123;</span><br><span class="line">        <span class="keyword">return</span> existingBook</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">/* 如果没有，就创建一个，然后保存 */</span></span><br><span class="line">        <span class="keyword">let</span> book = <span class="keyword">new</span> Book(title, author, publisherID, ISBN)</span><br><span class="line">        existingBooks[ISBN] = book</span><br><span class="line">        <span class="keyword">return</span> book</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="comment">/*BookRecordManager 借书管理类（管理内部状态）*/</span></span><br><span class="line"><span class="keyword">let</span> BookRecordManager = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="comment">//用一个对象来存储借书记录</span></span><br><span class="line">  <span class="keyword">let</span> bookRecordDatabase = &#123;&#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="comment">//新增一条记录</span></span><br><span class="line">    <span class="attr">addBookRecord</span>: <span class="function"><span class="keyword">function</span> (<span class="params">id, title, author, publisherID, ISBN, outDate, checkoutMember, returnDate, status</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">let</span> book = BookFactory.createBook(title, author, publisherID, ISBN);</span><br><span class="line">      bookRecordDatabase[id] = &#123;</span><br><span class="line">        <span class="attr">checkoutMember</span>: checkoutMember,</span><br><span class="line">        <span class="attr">outDate</span>: outDate,</span><br><span class="line">        <span class="attr">returnDate</span>: returnDate || <span class="string">&#x27;暂无&#x27;</span>,</span><br><span class="line">        <span class="attr">status</span>: status || <span class="string">&#x27;可借&#x27;</span>,</span><br><span class="line">        <span class="attr">book</span>: book</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//根据id获取一条记录</span></span><br><span class="line">    <span class="attr">getRecord</span>: <span class="function"><span class="keyword">function</span> (<span class="params">id</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> bookRecordDatabase[id]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//更新记录信息</span></span><br><span class="line">    <span class="attr">updateCheckoutStatus</span>: <span class="function"><span class="keyword">function</span> (<span class="params">bookID, outDate, checkoutMember, returnDate, status</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">let</span> record = bookRecordDatabase[bookID]</span><br><span class="line">      record.status = status</span><br><span class="line">      record.outDate = outDate</span><br><span class="line">      record.checkoutMember = checkoutMember</span><br><span class="line">      record.returnDate = returnDate</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//延长归还时间</span></span><br><span class="line">    <span class="attr">extendCheckoutPeriod</span>: <span class="function"><span class="keyword">function</span> (<span class="params">bookID, returnDate</span>) </span>&#123;</span><br><span class="line">      bookRecordDatabase[bookID].returnDate = returnDate</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//查看是否超期</span></span><br><span class="line">    <span class="attr">isOverdue</span>: <span class="function"><span class="keyword">function</span> (<span class="params">bookID</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> bookRecordDatabase[bookID].outDate</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"><span class="comment">//创建一条记录</span></span><br><span class="line">BookRecordManager.addBookRecord(<span class="number">2</span>, <span class="string">&#x27;NBA&#x27;</span>, <span class="string">&#x27;Kobe&#x27;</span>, <span class="string">&#x27;123456&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;2019-06-22&#x27;</span>, <span class="string">&#x27;woonsan&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//不使用享元模式下记录20条含多条已存在书籍的记录并调用isOverdue() 通过console.time()\console.timeEnd()记录消耗时间 default: 7.745ms 查看内存快照占用总内存1156字节</span></span><br><span class="line"><span class="comment">//使用享元模式下记录20条含多条已存在书籍的记录并调用isOverdue() 通过console.time()\console.timeEnd()记录消耗时间 default: 6.773ms 查看内存快照占用总内存860字节</span></span><br><span class="line"><span class="comment">//20条数据相差的消耗时间和内存占用不太明显，但是当样本数据量比较大时，两者相差会更加直观</span></span><br></pre></td></tr></table></figure>

<h3 id="单例-vs-享元"><a href="#单例-vs-享元" class="headerlink" title="单例 vs 享元"></a>单例 vs 享元</h3><p>单例模式主要是为了让实例唯一，复用一个类生成的实例，减少重复创建的消耗。<br><br>享元模式在区分出不同种类的外部状态后，创建新对象时如果需要选择不同种类的共享对象时可以使用工厂模式来提供共享对象，在共享对象的维护上，可以单例模式来提供单实例的共享对象。</p>
<p><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> record = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">title</span>: <span class="string">&#x27;Lakers&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;Kobe&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123450&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123450&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-22&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">title</span>: <span class="string">&#x27;java&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;sun&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123451&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123451&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-22&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">title</span>: <span class="string">&#x27;Lakers&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;Kobe&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123450&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123450&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-26&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-22&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">5</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-25&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">6</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-23&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">7</span>, <span class="attr">title</span>: <span class="string">&#x27;NBA&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;sb&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123453&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123453&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-22&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">8</span>, <span class="attr">title</span>: <span class="string">&#x27;NBA&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;sb&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123453&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123453&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-26&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">9</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-28&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">10</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2020-06-25&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">11</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2021-06-23&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">12</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-28&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">13</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2020-06-25&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">14</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2021-06-23&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">15</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-06-28&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">16</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2020-06-25&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">17</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2021-06-23&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">18</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2021-06-23&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">19</span>, <span class="attr">title</span>: <span class="string">&#x27;NBA&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;sb&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123453&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123453&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2021-07-23&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woon&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">20</span>, <span class="attr">title</span>: <span class="string">&#x27;javascript&#x27;</span>, <span class="attr">author</span>: <span class="string">&#x27;ryf&#x27;</span>, <span class="attr">publisherID</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">ISBN</span>: <span class="string">&#x27;123452&#x27;</span>, <span class="attr">outDate</span>: <span class="string">&#x27;2019-07-03&#x27;</span>, <span class="attr">checkoutMember</span>: <span class="string">&#x27;woonsan&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
